#ifndef CIRCUIT_CUH
#define CIRCUIT_CUH

void deep_simulation(double* dm_real, double* dm_imag,dim3 gridDim){}

// Generated from Cirq v0.8.0
// Qubits: [(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7)]
__device__ __inline__ void circuit(double* dm_real, double* dm_imag)
{
	RX(1.09999999999, 0);
	RY(1.09999999999, 0);
	RZ(1.09999999999, 0);
	RX(1.09999999999, 1);
	RY(1.09999999999, 1);
	RZ(1.09999999999, 1);
// Gate: ZZ**1.1
	RZ(3.45575191895, 0);
	RZ(3.45575191895, 1);
	U3(1.57079632679, 0, 0.785398163397, 0);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 1);
	RX(1.57079632679, 0);
	CX(0, 1);
	RX(1.25663706144, 0);
	RY(1.57079632679, 1);
	CX(1, 0);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(0, 1);
	U3(1.57079632679, 2.04203522483, 3.14159265359, 0);
	U3(1.57079632679, 0.471238898038, 0, 1);
// Gate: YY**1.1
	U3(0, 3.14159265359, 1.57079632679, 0);
	U3(0, 0, 1.57079632679, 1);
	RX(1.57079632679, 0);
	CX(0, 1);
	RX(1.25663706144, 0);
	RY(1.57079632679, 1);
	CX(1, 0);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(0, 1);
	U3(3.14159265359, 0, 1.57079632679, 0);
	U3(3.14159265359, 0, 4.71238898038, 1);
// Gate: XX**1.1
	U3(1.57079632679, 4.71238898038, 4.71238898038, 0);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 1);
	RX(1.57079632679, 0);
	CX(0, 1);
	RX(1.25663706144, 0);
	RY(1.57079632679, 1);
	CX(1, 0);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(0, 1);
	U3(1.57079632679, 1.57079632679, 1.57079632679, 0);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 1);
	RX(1.09999999999, 0);
	RY(1.09999999999, 0);
	RZ(1.09999999999, 0);
	RX(1.09999999999, 1);
	RY(1.09999999999, 1);
	RZ(1.09999999999, 1);
	RX(1.09999999999, 2);
	RY(1.09999999999, 2);
	RZ(1.09999999999, 2);
	RX(1.09999999999, 3);
	RY(1.09999999999, 3);
	RZ(1.09999999999, 3);
// Gate: ZZ**1.1
	RZ(3.45575191895, 2);
	RZ(3.45575191895, 3);
	U3(1.57079632679, 0, 0.785398163397, 2);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 3);
	RX(1.57079632679, 2);
	CX(2, 3);
	RX(1.25663706144, 2);
	RY(1.57079632679, 3);
	CX(3, 2);
	RX(-1.57079632679, 3);
	RZ(1.57079632679, 3);
	CX(2, 3);
	U3(1.57079632679, 2.04203522483, 3.14159265359, 2);
	U3(1.57079632679, 0.471238898038, 0, 3);
// Gate: YY**1.1
	U3(0, 3.14159265359, 1.57079632679, 2);
	U3(0, 0, 1.57079632679, 3);
	RX(1.57079632679, 2);
	CX(2, 3);
	RX(1.25663706144, 2);
	RY(1.57079632679, 3);
	CX(3, 2);
	RX(-1.57079632679, 3);
	RZ(1.57079632679, 3);
	CX(2, 3);
	U3(3.14159265359, 0, 1.57079632679, 2);
	U3(3.14159265359, 0, 4.71238898038, 3);
// Gate: XX**1.1
	U3(1.57079632679, 4.71238898038, 4.71238898038, 2);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 3);
	RX(1.57079632679, 2);
	CX(2, 3);
	RX(1.25663706144, 2);
	RY(1.57079632679, 3);
	CX(3, 2);
	RX(-1.57079632679, 3);
	RZ(1.57079632679, 3);
	CX(2, 3);
	U3(1.57079632679, 1.57079632679, 1.57079632679, 2);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 3);
	RX(1.09999999999, 2);
	RY(1.09999999999, 2);
	RZ(1.09999999999, 2);
	RX(1.09999999999, 3);
	RY(1.09999999999, 3);
	RZ(1.09999999999, 3);
	RX(1.09999999999, 4);
	RY(1.09999999999, 4);
	RZ(1.09999999999, 4);
	RX(1.09999999999, 5);
	RY(1.09999999999, 5);
	RZ(1.09999999999, 5);
// Gate: ZZ**1.1
	RZ(3.45575191895, 4);
	RZ(3.45575191895, 5);
	U3(1.57079632679, 0, 0.785398163397, 4);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 5);
	RX(1.57079632679, 4);
	CX(4, 5);
	RX(1.25663706144, 4);
	RY(1.57079632679, 5);
	CX(5, 4);
	RX(-1.57079632679, 5);
	RZ(1.57079632679, 5);
	CX(4, 5);
	U3(1.57079632679, 2.04203522483, 3.14159265359, 4);
	U3(1.57079632679, 0.471238898038, 0, 5);
// Gate: YY**1.1
	U3(0, 3.14159265359, 1.57079632679, 4);
	U3(0, 0, 1.57079632679, 5);
	RX(1.57079632679, 4);
	CX(4, 5);
	RX(1.25663706144, 4);
	RY(1.57079632679, 5);
	CX(5, 4);
	RX(-1.57079632679, 5);
	RZ(1.57079632679, 5);
	CX(4, 5);
	U3(3.14159265359, 0, 1.57079632679, 4);
	U3(3.14159265359, 0, 4.71238898038, 5);
// Gate: XX**1.1
	U3(1.57079632679, 4.71238898038, 4.71238898038, 4);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 5);
	RX(1.57079632679, 4);
	CX(4, 5);
	RX(1.25663706144, 4);
	RY(1.57079632679, 5);
	CX(5, 4);
	RX(-1.57079632679, 5);
	RZ(1.57079632679, 5);
	CX(4, 5);
	U3(1.57079632679, 1.57079632679, 1.57079632679, 4);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 5);
	RX(1.09999999999, 4);
	RY(1.09999999999, 4);
	RZ(1.09999999999, 4);
	RX(1.09999999999, 5);
	RY(1.09999999999, 5);
	RZ(1.09999999999, 5);
	RX(1.09999999999, 6);
	RY(1.09999999999, 6);
	RZ(1.09999999999, 6);
	RX(1.09999999999, 7);
	RY(1.09999999999, 7);
	RZ(1.09999999999, 7);
// Gate: ZZ**1.1
	RZ(3.45575191895, 6);
	RZ(3.45575191895, 7);
	U3(1.57079632679, 0, 0.785398163397, 6);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 7);
	RX(1.57079632679, 6);
	CX(6, 7);
	RX(1.25663706144, 6);
	RY(1.57079632679, 7);
	CX(7, 6);
	RX(-1.57079632679, 7);
	RZ(1.57079632679, 7);
	CX(6, 7);
	U3(1.57079632679, 2.04203522483, 3.14159265359, 6);
	U3(1.57079632679, 0.471238898038, 0, 7);
// Gate: YY**1.1
	U3(0, 3.14159265359, 1.57079632679, 6);
	U3(0, 0, 1.57079632679, 7);
	RX(1.57079632679, 6);
	CX(6, 7);
	RX(1.25663706144, 6);
	RY(1.57079632679, 7);
	CX(7, 6);
	RX(-1.57079632679, 7);
	RZ(1.57079632679, 7);
	CX(6, 7);
	U3(3.14159265359, 0, 1.57079632679, 6);
	U3(3.14159265359, 0, 4.71238898038, 7);
// Gate: XX**1.1
	U3(1.57079632679, 4.71238898038, 4.71238898038, 6);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 7);
	RX(1.57079632679, 6);
	CX(6, 7);
	RX(1.25663706144, 6);
	RY(1.57079632679, 7);
	CX(7, 6);
	RX(-1.57079632679, 7);
	RZ(1.57079632679, 7);
	CX(6, 7);
	U3(1.57079632679, 1.57079632679, 1.57079632679, 6);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 7);
	RX(1.09999999999, 6);
	RY(1.09999999999, 6);
	RZ(1.09999999999, 6);
	RX(1.09999999999, 7);
	RY(1.09999999999, 7);
	RZ(1.09999999999, 7);
	RX(1.09999999999, 1);
	RY(1.09999999999, 1);
	RZ(1.09999999999, 1);
	RX(1.09999999999, 2);
	RY(1.09999999999, 2);
	RZ(1.09999999999, 2);
// Gate: ZZ**1.1
	RZ(3.45575191895, 1);
	RZ(3.45575191895, 2);
	U3(1.57079632679, 0, 0.785398163397, 1);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 2);
	RX(1.57079632679, 1);
	CX(1, 2);
	RX(1.25663706144, 1);
	RY(1.57079632679, 2);
	CX(2, 1);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(1, 2);
	U3(1.57079632679, 2.04203522483, 3.14159265359, 1);
	U3(1.57079632679, 0.471238898038, 0, 2);
// Gate: YY**1.1
	U3(0, 3.14159265359, 1.57079632679, 1);
	U3(0, 0, 1.57079632679, 2);
	RX(1.57079632679, 1);
	CX(1, 2);
	RX(1.25663706144, 1);
	RY(1.57079632679, 2);
	CX(2, 1);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(1, 2);
	U3(3.14159265359, 0, 1.57079632679, 1);
	U3(3.14159265359, 0, 4.71238898038, 2);
// Gate: XX**1.1
	U3(1.57079632679, 4.71238898038, 4.71238898038, 1);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 2);
	RX(1.57079632679, 1);
	CX(1, 2);
	RX(1.25663706144, 1);
	RY(1.57079632679, 2);
	CX(2, 1);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(1, 2);
	U3(1.57079632679, 1.57079632679, 1.57079632679, 1);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 2);
	RX(1.09999999999, 1);
	RY(1.09999999999, 1);
	RZ(1.09999999999, 1);
	RX(1.09999999999, 2);
	RY(1.09999999999, 2);
	RZ(1.09999999999, 2);
	RX(1.09999999999, 3);
	RY(1.09999999999, 3);
	RZ(1.09999999999, 3);
	RX(1.09999999999, 4);
	RY(1.09999999999, 4);
	RZ(1.09999999999, 4);
// Gate: ZZ**1.1
	RZ(3.45575191895, 3);
	RZ(3.45575191895, 4);
	U3(1.57079632679, 0, 0.785398163397, 3);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 4);
	RX(1.57079632679, 3);
	CX(3, 4);
	RX(1.25663706144, 3);
	RY(1.57079632679, 4);
	CX(4, 3);
	RX(-1.57079632679, 4);
	RZ(1.57079632679, 4);
	CX(3, 4);
	U3(1.57079632679, 2.04203522483, 3.14159265359, 3);
	U3(1.57079632679, 0.471238898038, 0, 4);
// Gate: YY**1.1
	U3(0, 3.14159265359, 1.57079632679, 3);
	U3(0, 0, 1.57079632679, 4);
	RX(1.57079632679, 3);
	CX(3, 4);
	RX(1.25663706144, 3);
	RY(1.57079632679, 4);
	CX(4, 3);
	RX(-1.57079632679, 4);
	RZ(1.57079632679, 4);
	CX(3, 4);
	U3(3.14159265359, 0, 1.57079632679, 3);
	U3(3.14159265359, 0, 4.71238898038, 4);
// Gate: XX**1.1
	U3(1.57079632679, 4.71238898038, 4.71238898038, 3);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 4);
	RX(1.57079632679, 3);
	CX(3, 4);
	RX(1.25663706144, 3);
	RY(1.57079632679, 4);
	CX(4, 3);
	RX(-1.57079632679, 4);
	RZ(1.57079632679, 4);
	CX(3, 4);
	U3(1.57079632679, 1.57079632679, 1.57079632679, 3);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 4);
	RX(1.09999999999, 3);
	RY(1.09999999999, 3);
	RZ(1.09999999999, 3);
	RX(1.09999999999, 4);
	RY(1.09999999999, 4);
	RZ(1.09999999999, 4);
	RX(1.09999999999, 5);
	RY(1.09999999999, 5);
	RZ(1.09999999999, 5);
	RX(1.09999999999, 6);
	RY(1.09999999999, 6);
	RZ(1.09999999999, 6);
// Gate: ZZ**1.1
	RZ(3.45575191895, 5);
	RZ(3.45575191895, 6);
	U3(1.57079632679, 0, 0.785398163397, 5);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 6);
	RX(1.57079632679, 5);
	CX(5, 6);
	RX(1.25663706144, 5);
	RY(1.57079632679, 6);
	CX(6, 5);
	RX(-1.57079632679, 6);
	RZ(1.57079632679, 6);
	CX(5, 6);
	U3(1.57079632679, 2.04203522483, 3.14159265359, 5);
	U3(1.57079632679, 0.471238898038, 0, 6);
// Gate: YY**1.1
	U3(0, 3.14159265359, 1.57079632679, 5);
	U3(0, 0, 1.57079632679, 6);
	RX(1.57079632679, 5);
	CX(5, 6);
	RX(1.25663706144, 5);
	RY(1.57079632679, 6);
	CX(6, 5);
	RX(-1.57079632679, 6);
	RZ(1.57079632679, 6);
	CX(5, 6);
	U3(3.14159265359, 0, 1.57079632679, 5);
	U3(3.14159265359, 0, 4.71238898038, 6);
// Gate: XX**1.1
	U3(1.57079632679, 4.71238898038, 4.71238898038, 5);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 6);
	RX(1.57079632679, 5);
	CX(5, 6);
	RX(1.25663706144, 5);
	RY(1.57079632679, 6);
	CX(6, 5);
	RX(-1.57079632679, 6);
	RZ(1.57079632679, 6);
	CX(5, 6);
	U3(1.57079632679, 1.57079632679, 1.57079632679, 5);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 6);
	RX(1.09999999999, 5);
	RY(1.09999999999, 5);
	RZ(1.09999999999, 5);
	RX(1.09999999999, 6);
	RY(1.09999999999, 6);
	RZ(1.09999999999, 6);
	RX(1.09999999999, 7);
	RY(1.09999999999, 7);
	RZ(1.09999999999, 7);
	RX(1.09999999999, 0);
	RY(1.09999999999, 0);
	RZ(1.09999999999, 0);
// Gate: ZZ**1.1
	RZ(3.45575191895, 7);
	RZ(3.45575191895, 0);
	U3(1.57079632679, 0, 0.785398163397, 7);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 0);
	RX(1.57079632679, 7);
	CX(7, 0);
	RX(1.25663706144, 7);
	RY(1.57079632679, 0);
	CX(0, 7);
	RX(-1.57079632679, 0);
	RZ(1.57079632679, 0);
	CX(7, 0);
	U3(1.57079632679, 2.04203522483, 3.14159265359, 7);
	U3(1.57079632679, 0.471238898038, 0, 0);
// Gate: YY**1.1
	U3(0, 3.14159265359, 1.57079632679, 7);
	U3(0, 0, 1.57079632679, 0);
	RX(1.57079632679, 7);
	CX(7, 0);
	RX(1.25663706144, 7);
	RY(1.57079632679, 0);
	CX(0, 7);
	RX(-1.57079632679, 0);
	RZ(1.57079632679, 0);
	CX(7, 0);
	U3(3.14159265359, 0, 1.57079632679, 7);
	U3(3.14159265359, 0, 4.71238898038, 0);
// Gate: XX**1.1
	U3(1.57079632679, 4.71238898038, 4.71238898038, 7);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 0);
	RX(1.57079632679, 7);
	CX(7, 0);
	RX(1.25663706144, 7);
	RY(1.57079632679, 0);
	CX(0, 7);
	RX(-1.57079632679, 0);
	RZ(1.57079632679, 0);
	CX(7, 0);
	U3(1.57079632679, 1.57079632679, 1.57079632679, 7);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 0);
	RX(1.09999999999, 7);
	RY(1.09999999999, 7);
	RZ(1.09999999999, 7);
	RX(1.09999999999, 0);
	RY(1.09999999999, 0);
	RZ(1.09999999999, 0);
// Gate: CNOT**1.1
	RY(-1.57079632679, 1);
	U3(1.57079632679, 0, 0.785398163397, 0);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 1);
	RX(1.57079632679, 0);
	CX(0, 1);
	RX(0.157079632679, 0);
	RY(1.57079632679, 1);
	CX(1, 0);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(0, 1);
	U3(1.57079632679, 0.942477796077, 3.14159265359, 0);
	U3(1.57079632679, 5.65486677646, 0, 1);
	RY(1.57079632679, 1);
// Gate: CNOT**1.1
	RY(-1.57079632679, 3);
	U3(1.57079632679, 0, 0.785398163397, 2);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 3);
	RX(1.57079632679, 2);
	CX(2, 3);
	RX(0.157079632679, 2);
	RY(1.57079632679, 3);
	CX(3, 2);
	RX(-1.57079632679, 3);
	RZ(1.57079632679, 3);
	CX(2, 3);
	U3(1.57079632679, 0.942477796077, 3.14159265359, 2);
	U3(1.57079632679, 5.65486677646, 0, 3);
	RY(1.57079632679, 3);
// Gate: CNOT**1.1
	RY(-1.57079632679, 5);
	U3(1.57079632679, 0, 0.785398163397, 4);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 5);
	RX(1.57079632679, 4);
	CX(4, 5);
	RX(0.157079632679, 4);
	RY(1.57079632679, 5);
	CX(5, 4);
	RX(-1.57079632679, 5);
	RZ(1.57079632679, 5);
	CX(4, 5);
	U3(1.57079632679, 0.942477796077, 3.14159265359, 4);
	U3(1.57079632679, 5.65486677646, 0, 5);
	RY(1.57079632679, 5);
// Gate: CNOT**1.1
	RY(-1.57079632679, 7);
	U3(1.57079632679, 0, 0.785398163397, 6);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 7);
	RX(1.57079632679, 6);
	CX(6, 7);
	RX(0.157079632679, 6);
	RY(1.57079632679, 7);
	CX(7, 6);
	RX(-1.57079632679, 7);
	RZ(1.57079632679, 7);
	CX(6, 7);
	U3(1.57079632679, 0.942477796077, 3.14159265359, 6);
	U3(1.57079632679, 5.65486677646, 0, 7);
	RY(1.57079632679, 7);
// Gate: CZ**1.1
	U3(1.57079632679, 0, 0.785398163397, 0);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 1);
	RX(1.57079632679, 0);
	CX(0, 1);
	RX(0.157079632679, 0);
	RY(1.57079632679, 1);
	CX(1, 0);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(0, 1);
	U3(1.57079632679, 0.942477796077, 3.14159265359, 0);
	U3(1.57079632679, 5.65486677646, 0, 1);
// Gate: CZ**1.1
	U3(1.57079632679, 0, 0.785398163397, 2);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 3);
	RX(1.57079632679, 2);
	CX(2, 3);
	RX(0.157079632679, 2);
	RY(1.57079632679, 3);
	CX(3, 2);
	RX(-1.57079632679, 3);
	RZ(1.57079632679, 3);
	CX(2, 3);
	U3(1.57079632679, 0.942477796077, 3.14159265359, 2);
	U3(1.57079632679, 5.65486677646, 0, 3);
// Gate: CZ**1.1
	U3(1.57079632679, 0, 0.785398163397, 4);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 5);
	RX(1.57079632679, 4);
	CX(4, 5);
	RX(0.157079632679, 4);
	RY(1.57079632679, 5);
	CX(5, 4);
	RX(-1.57079632679, 5);
	RZ(1.57079632679, 5);
	CX(4, 5);
	U3(1.57079632679, 0.942477796077, 3.14159265359, 4);
	U3(1.57079632679, 5.65486677646, 0, 5);
// Gate: CZ**1.1
	U3(1.57079632679, 0, 0.785398163397, 6);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 7);
	RX(1.57079632679, 6);
	CX(6, 7);
	RX(0.157079632679, 6);
	RY(1.57079632679, 7);
	CX(7, 6);
	RX(-1.57079632679, 7);
	RZ(1.57079632679, 7);
	CX(6, 7);
	U3(1.57079632679, 0.942477796077, 3.14159265359, 6);
	U3(1.57079632679, 5.65486677646, 0, 7);
// Gate: CNOT**1.1
	RY(-1.57079632679, 2);
	U3(1.57079632679, 0, 0.785398163397, 1);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 2);
	RX(1.57079632679, 1);
	CX(1, 2);
	RX(0.157079632679, 1);
	RY(1.57079632679, 2);
	CX(2, 1);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(1, 2);
	U3(1.57079632679, 0.942477796077, 3.14159265359, 1);
	U3(1.57079632679, 5.65486677646, 0, 2);
	RY(1.57079632679, 2);
// Gate: CNOT**1.1
	RY(-1.57079632679, 4);
	U3(1.57079632679, 0, 0.785398163397, 3);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 4);
	RX(1.57079632679, 3);
	CX(3, 4);
	RX(0.157079632679, 3);
	RY(1.57079632679, 4);
	CX(4, 3);
	RX(-1.57079632679, 4);
	RZ(1.57079632679, 4);
	CX(3, 4);
	U3(1.57079632679, 0.942477796077, 3.14159265359, 3);
	U3(1.57079632679, 5.65486677646, 0, 4);
	RY(1.57079632679, 4);
// Gate: CNOT**1.1
	RY(-1.57079632679, 6);
	U3(1.57079632679, 0, 0.785398163397, 5);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 6);
	RX(1.57079632679, 5);
	CX(5, 6);
	RX(0.157079632679, 5);
	RY(1.57079632679, 6);
	CX(6, 5);
	RX(-1.57079632679, 6);
	RZ(1.57079632679, 6);
	CX(5, 6);
	U3(1.57079632679, 0.942477796077, 3.14159265359, 5);
	U3(1.57079632679, 5.65486677646, 0, 6);
	RY(1.57079632679, 6);
// Gate: CNOT**1.1
	RY(-1.57079632679, 0);
	U3(1.57079632679, 0, 0.785398163397, 7);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 0);
	RX(1.57079632679, 7);
	CX(7, 0);
	RX(0.157079632679, 7);
	RY(1.57079632679, 0);
	CX(0, 7);
	RX(-1.57079632679, 0);
	RZ(1.57079632679, 0);
	CX(7, 0);
	U3(1.57079632679, 0.942477796077, 3.14159265359, 7);
	U3(1.57079632679, 5.65486677646, 0, 0);
	RY(1.57079632679, 0);
// Gate: CZ**1.1
	U3(1.57079632679, 0, 0.785398163397, 1);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 2);
	RX(1.57079632679, 1);
	CX(1, 2);
	RX(0.157079632679, 1);
	RY(1.57079632679, 2);
	CX(2, 1);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(1, 2);
	U3(1.57079632679, 0.942477796077, 3.14159265359, 1);
	U3(1.57079632679, 5.65486677646, 0, 2);
// Gate: CZ**1.1
	U3(1.57079632679, 0, 0.785398163397, 3);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 4);
	RX(1.57079632679, 3);
	CX(3, 4);
	RX(0.157079632679, 3);
	RY(1.57079632679, 4);
	CX(4, 3);
	RX(-1.57079632679, 4);
	RZ(1.57079632679, 4);
	CX(3, 4);
	U3(1.57079632679, 0.942477796077, 3.14159265359, 3);
	U3(1.57079632679, 5.65486677646, 0, 4);
// Gate: CZ**1.1
	U3(1.57079632679, 0, 0.785398163397, 5);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 6);
	RX(1.57079632679, 5);
	CX(5, 6);
	RX(0.157079632679, 5);
	RY(1.57079632679, 6);
	CX(6, 5);
	RX(-1.57079632679, 6);
	RZ(1.57079632679, 6);
	CX(5, 6);
	U3(1.57079632679, 0.942477796077, 3.14159265359, 5);
	U3(1.57079632679, 5.65486677646, 0, 6);
// Gate: CZ**1.1
	U3(1.57079632679, 0, 0.785398163397, 7);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 0);
	RX(1.57079632679, 7);
	CX(7, 0);
	RX(0.157079632679, 7);
	RY(1.57079632679, 0);
	CX(0, 7);
	RX(-1.57079632679, 0);
	RZ(1.57079632679, 0);
	CX(7, 0);
	U3(1.57079632679, 0.942477796077, 3.14159265359, 7);
	U3(1.57079632679, 5.65486677646, 0, 0);
	RX(1.09999999999, 0);
	RY(1.09999999999, 0);
	RZ(1.09999999999, 0);
	RX(1.09999999999, 1);
	RY(1.09999999999, 1);
	RZ(1.09999999999, 1);
// Gate: ZZ**1.1
	RZ(3.45575191895, 0);
	RZ(3.45575191895, 1);
	U3(1.57079632679, 0, 0.785398163397, 0);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 1);
	RX(1.57079632679, 0);
	CX(0, 1);
	RX(1.25663706144, 0);
	RY(1.57079632679, 1);
	CX(1, 0);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(0, 1);
	U3(1.57079632679, 2.04203522483, 3.14159265359, 0);
	U3(1.57079632679, 0.471238898038, 0, 1);
// Gate: YY**1.1
	U3(0, 3.14159265359, 1.57079632679, 0);
	U3(0, 0, 1.57079632679, 1);
	RX(1.57079632679, 0);
	CX(0, 1);
	RX(1.25663706144, 0);
	RY(1.57079632679, 1);
	CX(1, 0);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(0, 1);
	U3(3.14159265359, 0, 1.57079632679, 0);
	U3(3.14159265359, 0, 4.71238898038, 1);
// Gate: XX**1.1
	U3(1.57079632679, 4.71238898038, 4.71238898038, 0);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 1);
	RX(1.57079632679, 0);
	CX(0, 1);
	RX(1.25663706144, 0);
	RY(1.57079632679, 1);
	CX(1, 0);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(0, 1);
	U3(1.57079632679, 1.57079632679, 1.57079632679, 0);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 1);
	RX(1.09999999999, 0);
	RY(1.09999999999, 0);
	RZ(1.09999999999, 0);
	RX(1.09999999999, 1);
	RY(1.09999999999, 1);
	RZ(1.09999999999, 1);
	RX(1.09999999999, 2);
	RY(1.09999999999, 2);
	RZ(1.09999999999, 2);
	RX(1.09999999999, 3);
	RY(1.09999999999, 3);
	RZ(1.09999999999, 3);
// Gate: ZZ**1.1
	RZ(3.45575191895, 2);
	RZ(3.45575191895, 3);
	U3(1.57079632679, 0, 0.785398163397, 2);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 3);
	RX(1.57079632679, 2);
	CX(2, 3);
	RX(1.25663706144, 2);
	RY(1.57079632679, 3);
	CX(3, 2);
	RX(-1.57079632679, 3);
	RZ(1.57079632679, 3);
	CX(2, 3);
	U3(1.57079632679, 2.04203522483, 3.14159265359, 2);
	U3(1.57079632679, 0.471238898038, 0, 3);
// Gate: YY**1.1
	U3(0, 3.14159265359, 1.57079632679, 2);
	U3(0, 0, 1.57079632679, 3);
	RX(1.57079632679, 2);
	CX(2, 3);
	RX(1.25663706144, 2);
	RY(1.57079632679, 3);
	CX(3, 2);
	RX(-1.57079632679, 3);
	RZ(1.57079632679, 3);
	CX(2, 3);
	U3(3.14159265359, 0, 1.57079632679, 2);
	U3(3.14159265359, 0, 4.71238898038, 3);
// Gate: XX**1.1
	U3(1.57079632679, 4.71238898038, 4.71238898038, 2);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 3);
	RX(1.57079632679, 2);
	CX(2, 3);
	RX(1.25663706144, 2);
	RY(1.57079632679, 3);
	CX(3, 2);
	RX(-1.57079632679, 3);
	RZ(1.57079632679, 3);
	CX(2, 3);
	U3(1.57079632679, 1.57079632679, 1.57079632679, 2);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 3);
	RX(1.09999999999, 2);
	RY(1.09999999999, 2);
	RZ(1.09999999999, 2);
	RX(1.09999999999, 3);
	RY(1.09999999999, 3);
	RZ(1.09999999999, 3);
	RX(1.09999999999, 4);
	RY(1.09999999999, 4);
	RZ(1.09999999999, 4);
	RX(1.09999999999, 5);
	RY(1.09999999999, 5);
	RZ(1.09999999999, 5);
// Gate: ZZ**1.1
	RZ(3.45575191895, 4);
	RZ(3.45575191895, 5);
	U3(1.57079632679, 0, 0.785398163397, 4);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 5);
	RX(1.57079632679, 4);
	CX(4, 5);
	RX(1.25663706144, 4);
	RY(1.57079632679, 5);
	CX(5, 4);
	RX(-1.57079632679, 5);
	RZ(1.57079632679, 5);
	CX(4, 5);
	U3(1.57079632679, 2.04203522483, 3.14159265359, 4);
	U3(1.57079632679, 0.471238898038, 0, 5);
// Gate: YY**1.1
	U3(0, 3.14159265359, 1.57079632679, 4);
	U3(0, 0, 1.57079632679, 5);
	RX(1.57079632679, 4);
	CX(4, 5);
	RX(1.25663706144, 4);
	RY(1.57079632679, 5);
	CX(5, 4);
	RX(-1.57079632679, 5);
	RZ(1.57079632679, 5);
	CX(4, 5);
	U3(3.14159265359, 0, 1.57079632679, 4);
	U3(3.14159265359, 0, 4.71238898038, 5);
// Gate: XX**1.1
	U3(1.57079632679, 4.71238898038, 4.71238898038, 4);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 5);
	RX(1.57079632679, 4);
	CX(4, 5);
	RX(1.25663706144, 4);
	RY(1.57079632679, 5);
	CX(5, 4);
	RX(-1.57079632679, 5);
	RZ(1.57079632679, 5);
	CX(4, 5);
	U3(1.57079632679, 1.57079632679, 1.57079632679, 4);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 5);
	RX(1.09999999999, 4);
	RY(1.09999999999, 4);
	RZ(1.09999999999, 4);
	RX(1.09999999999, 5);
	RY(1.09999999999, 5);
	RZ(1.09999999999, 5);
	RX(1.09999999999, 6);
	RY(1.09999999999, 6);
	RZ(1.09999999999, 6);
	RX(1.09999999999, 7);
	RY(1.09999999999, 7);
	RZ(1.09999999999, 7);
// Gate: ZZ**1.1
	RZ(3.45575191895, 6);
	RZ(3.45575191895, 7);
	U3(1.57079632679, 0, 0.785398163397, 6);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 7);
	RX(1.57079632679, 6);
	CX(6, 7);
	RX(1.25663706144, 6);
	RY(1.57079632679, 7);
	CX(7, 6);
	RX(-1.57079632679, 7);
	RZ(1.57079632679, 7);
	CX(6, 7);
	U3(1.57079632679, 2.04203522483, 3.14159265359, 6);
	U3(1.57079632679, 0.471238898038, 0, 7);
// Gate: YY**1.1
	U3(0, 3.14159265359, 1.57079632679, 6);
	U3(0, 0, 1.57079632679, 7);
	RX(1.57079632679, 6);
	CX(6, 7);
	RX(1.25663706144, 6);
	RY(1.57079632679, 7);
	CX(7, 6);
	RX(-1.57079632679, 7);
	RZ(1.57079632679, 7);
	CX(6, 7);
	U3(3.14159265359, 0, 1.57079632679, 6);
	U3(3.14159265359, 0, 4.71238898038, 7);
// Gate: XX**1.1
	U3(1.57079632679, 4.71238898038, 4.71238898038, 6);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 7);
	RX(1.57079632679, 6);
	CX(6, 7);
	RX(1.25663706144, 6);
	RY(1.57079632679, 7);
	CX(7, 6);
	RX(-1.57079632679, 7);
	RZ(1.57079632679, 7);
	CX(6, 7);
	U3(1.57079632679, 1.57079632679, 1.57079632679, 6);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 7);
	RX(1.09999999999, 6);
	RY(1.09999999999, 6);
	RZ(1.09999999999, 6);
	RX(1.09999999999, 7);
	RY(1.09999999999, 7);
	RZ(1.09999999999, 7);
	RX(1.09999999999, 1);
	RY(1.09999999999, 1);
	RZ(1.09999999999, 1);
	RX(1.09999999999, 2);
	RY(1.09999999999, 2);
	RZ(1.09999999999, 2);
// Gate: ZZ**1.1
	RZ(3.45575191895, 1);
	RZ(3.45575191895, 2);
	U3(1.57079632679, 0, 0.785398163397, 1);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 2);
	RX(1.57079632679, 1);
	CX(1, 2);
	RX(1.25663706144, 1);
	RY(1.57079632679, 2);
	CX(2, 1);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(1, 2);
	U3(1.57079632679, 2.04203522483, 3.14159265359, 1);
	U3(1.57079632679, 0.471238898038, 0, 2);
// Gate: YY**1.1
	U3(0, 3.14159265359, 1.57079632679, 1);
	U3(0, 0, 1.57079632679, 2);
	RX(1.57079632679, 1);
	CX(1, 2);
	RX(1.25663706144, 1);
	RY(1.57079632679, 2);
	CX(2, 1);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(1, 2);
	U3(3.14159265359, 0, 1.57079632679, 1);
	U3(3.14159265359, 0, 4.71238898038, 2);
// Gate: XX**1.1
	U3(1.57079632679, 4.71238898038, 4.71238898038, 1);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 2);
	RX(1.57079632679, 1);
	CX(1, 2);
	RX(1.25663706144, 1);
	RY(1.57079632679, 2);
	CX(2, 1);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(1, 2);
	U3(1.57079632679, 1.57079632679, 1.57079632679, 1);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 2);
	RX(1.09999999999, 1);
	RY(1.09999999999, 1);
	RZ(1.09999999999, 1);
	RX(1.09999999999, 2);
	RY(1.09999999999, 2);
	RZ(1.09999999999, 2);
	RX(1.09999999999, 3);
	RY(1.09999999999, 3);
	RZ(1.09999999999, 3);
	RX(1.09999999999, 4);
	RY(1.09999999999, 4);
	RZ(1.09999999999, 4);
// Gate: ZZ**1.1
	RZ(3.45575191895, 3);
	RZ(3.45575191895, 4);
	U3(1.57079632679, 0, 0.785398163397, 3);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 4);
	RX(1.57079632679, 3);
	CX(3, 4);
	RX(1.25663706144, 3);
	RY(1.57079632679, 4);
	CX(4, 3);
	RX(-1.57079632679, 4);
	RZ(1.57079632679, 4);
	CX(3, 4);
	U3(1.57079632679, 2.04203522483, 3.14159265359, 3);
	U3(1.57079632679, 0.471238898038, 0, 4);
// Gate: YY**1.1
	U3(0, 3.14159265359, 1.57079632679, 3);
	U3(0, 0, 1.57079632679, 4);
	RX(1.57079632679, 3);
	CX(3, 4);
	RX(1.25663706144, 3);
	RY(1.57079632679, 4);
	CX(4, 3);
	RX(-1.57079632679, 4);
	RZ(1.57079632679, 4);
	CX(3, 4);
	U3(3.14159265359, 0, 1.57079632679, 3);
	U3(3.14159265359, 0, 4.71238898038, 4);
// Gate: XX**1.1
	U3(1.57079632679, 4.71238898038, 4.71238898038, 3);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 4);
	RX(1.57079632679, 3);
	CX(3, 4);
	RX(1.25663706144, 3);
	RY(1.57079632679, 4);
	CX(4, 3);
	RX(-1.57079632679, 4);
	RZ(1.57079632679, 4);
	CX(3, 4);
	U3(1.57079632679, 1.57079632679, 1.57079632679, 3);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 4);
	RX(1.09999999999, 3);
	RY(1.09999999999, 3);
	RZ(1.09999999999, 3);
	RX(1.09999999999, 4);
	RY(1.09999999999, 4);
	RZ(1.09999999999, 4);
	RX(1.09999999999, 5);
	RY(1.09999999999, 5);
	RZ(1.09999999999, 5);
	RX(1.09999999999, 6);
	RY(1.09999999999, 6);
	RZ(1.09999999999, 6);
// Gate: ZZ**1.1
	RZ(3.45575191895, 5);
	RZ(3.45575191895, 6);
	U3(1.57079632679, 0, 0.785398163397, 5);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 6);
	RX(1.57079632679, 5);
	CX(5, 6);
	RX(1.25663706144, 5);
	RY(1.57079632679, 6);
	CX(6, 5);
	RX(-1.57079632679, 6);
	RZ(1.57079632679, 6);
	CX(5, 6);
	U3(1.57079632679, 2.04203522483, 3.14159265359, 5);
	U3(1.57079632679, 0.471238898038, 0, 6);
// Gate: YY**1.1
	U3(0, 3.14159265359, 1.57079632679, 5);
	U3(0, 0, 1.57079632679, 6);
	RX(1.57079632679, 5);
	CX(5, 6);
	RX(1.25663706144, 5);
	RY(1.57079632679, 6);
	CX(6, 5);
	RX(-1.57079632679, 6);
	RZ(1.57079632679, 6);
	CX(5, 6);
	U3(3.14159265359, 0, 1.57079632679, 5);
	U3(3.14159265359, 0, 4.71238898038, 6);
// Gate: XX**1.1
	U3(1.57079632679, 4.71238898038, 4.71238898038, 5);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 6);
	RX(1.57079632679, 5);
	CX(5, 6);
	RX(1.25663706144, 5);
	RY(1.57079632679, 6);
	CX(6, 5);
	RX(-1.57079632679, 6);
	RZ(1.57079632679, 6);
	CX(5, 6);
	U3(1.57079632679, 1.57079632679, 1.57079632679, 5);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 6);
	RX(1.09999999999, 5);
	RY(1.09999999999, 5);
	RZ(1.09999999999, 5);
	RX(1.09999999999, 6);
	RY(1.09999999999, 6);
	RZ(1.09999999999, 6);
	RX(1.09999999999, 7);
	RY(1.09999999999, 7);
	RZ(1.09999999999, 7);
	RX(1.09999999999, 0);
	RY(1.09999999999, 0);
	RZ(1.09999999999, 0);
// Gate: ZZ**1.1
	RZ(3.45575191895, 7);
	RZ(3.45575191895, 0);
	U3(1.57079632679, 0, 0.785398163397, 7);
	U3(1.57079632679, 3.14159265359, 2.35619449019, 0);
	RX(1.57079632679, 7);
	CX(7, 0);
	RX(1.25663706144, 7);
	RY(1.57079632679, 0);
	CX(0, 7);
	RX(-1.57079632679, 0);
	RZ(1.57079632679, 0);
	CX(7, 0);
	U3(1.57079632679, 2.04203522483, 3.14159265359, 7);
	U3(1.57079632679, 0.471238898038, 0, 0);
// Gate: YY**1.1
	U3(0, 3.14159265359, 1.57079632679, 7);
	U3(0, 0, 1.57079632679, 0);
	RX(1.57079632679, 7);
	CX(7, 0);
	RX(1.25663706144, 7);
	RY(1.57079632679, 0);
	CX(0, 7);
	RX(-1.57079632679, 0);
	RZ(1.57079632679, 0);
	CX(7, 0);
	U3(3.14159265359, 0, 1.57079632679, 7);
	U3(3.14159265359, 0, 4.71238898038, 0);
// Gate: XX**1.1
	U3(1.57079632679, 4.71238898038, 4.71238898038, 7);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 0);
	RX(1.57079632679, 7);
	CX(7, 0);
	RX(1.25663706144, 7);
	RY(1.57079632679, 0);
	CX(0, 7);
	RX(-1.57079632679, 0);
	RZ(1.57079632679, 0);
	CX(7, 0);
	U3(1.57079632679, 1.57079632679, 1.57079632679, 7);
	U3(1.57079632679, 1.57079632679, 4.71238898038, 0);
	RX(1.09999999999, 7);
	RY(1.09999999999, 7);
	RZ(1.09999999999, 7);
	RX(1.09999999999, 0);
	RY(1.09999999999, 0);
	RZ(1.09999999999, 0);
}
#endif
