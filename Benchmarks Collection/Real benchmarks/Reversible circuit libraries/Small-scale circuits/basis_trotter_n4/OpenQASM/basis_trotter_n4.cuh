#ifndef CIRCUIT_CUH
#define CIRCUIT_CUH

// Generated from Cirq v0.8.0
// Qubits: [0, 1, 2, 3]
__device__ __inline__ void circuit(double* dm_real, double* dm_imag)
{
	Z(0);
	Z(1);
	Z(2);
	Z(3);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 2);
	CX(1, 2);
	H(1);
	CX(2, 1);
	RZ(-1.57079632679, 1);
	CX(2, 1);
	RZ(1.57079632679, 1);
	H(1);
	CX(1, 2);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 2);
// Gate: PhasedISWAP**0.08130614625631793
	RZ(0.785398163397, 0);
	RZ(-0.785398163397, 1);
	CX(0, 1);
	H(0);
	CX(1, 0);
	RZ(0.127715395797, 0);
	CX(1, 0);
	RZ(-0.127715395797, 0);
	H(0);
	CX(0, 1);
	RZ(-0.785398163397, 0);
	RZ(0.785398163397, 1);
// Gate: PhasedISWAP**-0.08130614625631793
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 3);
	CX(2, 3);
	H(2);
	CX(3, 2);
	RZ(-0.127715395797, 2);
	CX(3, 2);
	RZ(0.127715395797, 2);
	H(2);
	CX(2, 3);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 3);
	RZ(0.352856582139, 0);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 2);
	CX(1, 2);
	H(1);
	CX(2, 1);
	RZ(-1.57079632679, 1);
	CX(2, 1);
	RZ(1.57079632679, 1);
	H(1);
	CX(1, 2);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 2);
	RZ(0.352856582139, 1);
	RZ(0.177471696457, 3);
	RZ(0.177471696457, 2);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 2);
	CX(1, 2);
	H(1);
	CX(2, 1);
	RZ(-1.57079632679, 1);
	CX(2, 1);
	RZ(1.57079632679, 1);
	H(1);
	CX(1, 2);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 2);
// Gate: PhasedISWAP**-0.05102950815299322
	RZ(0.785398163397, 0);
	RZ(-0.785398163397, 1);
	CX(0, 1);
	H(0);
	CX(1, 0);
	RZ(-0.0801569640387, 0);
	CX(1, 0);
	RZ(0.0801569640387, 0);
	H(0);
	CX(0, 1);
	RZ(-0.785398163397, 0);
	RZ(0.785398163397, 1);
// Gate: PhasedISWAP**0.05102950815299322
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 3);
	CX(2, 3);
	H(2);
	CX(3, 2);
	RZ(0.0801569640387, 2);
	CX(3, 2);
	RZ(-0.0801569640387, 2);
	H(2);
	CX(2, 3);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 3);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 2);
	CX(1, 2);
	H(1);
	CX(2, 1);
	RZ(-1.57079632679, 1);
	CX(2, 1);
	RZ(1.57079632679, 1);
	H(1);
	CX(1, 2);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 2);
// Gate: CZ**-0.048279591094340914
	U3(1.57079632679, 0, 1.57079632679, 0);
	U3(1.57079632679, 3.14159265359, 3.14159265359, 1);
	RX(1.57079632679, 0);
	CX(0, 1);
	RX(1.49495892259, 0);
	RY(1.57079632679, 1);
	CX(1, 0);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(0, 1);
	U3(1.57079632679, 1.49495892259, 3.14159265359, 0);
	U3(1.57079632679, 6.20734790298, 0, 1);
	SWAP(0, 1);
// Gate: CZ**-0.022156912718971442
	U3(1.57079632679, 0, 5.49778714378, 2);
	U3(1.57079632679, 3.14159265359, 3.92699081699, 3);
	RX(1.57079632679, 2);
	CX(2, 3);
	RX(1.53599232956, 2);
	RY(1.57079632679, 3);
	CX(3, 2);
	RX(-1.57079632679, 3);
	RZ(1.57079632679, 3);
	CX(2, 3);
	U3(1.57079632679, 3.89218681975, 3.14159265359, 2);
	U3(1.57079632679, 5.46298314654, 0, 3);
	SWAP(2, 3);
// Gate: CZ**-0.03270667647415345
	U3(1.57079632679, 0, 0, 1);
	U3(1.57079632679, 3.14159265359, 4.71238898038, 2);
	RX(1.57079632679, 1);
	CX(1, 2);
	RX(1.51942079964, 1);
	RY(1.57079632679, 2);
	CX(2, 1);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(1, 2);
	U3(1.57079632679, 3.09021712644, 3.14159265359, 1);
	U3(1.57079632679, 4.66101345323, 0, 2);
	SWAP(1, 2);
// Gate: CZ**-0.03270667647415345
	U3(1.57079632679, 0, 0, 0);
	U3(1.57079632679, 3.14159265359, 4.71238898038, 1);
	RX(1.57079632679, 0);
	CX(0, 1);
	RX(1.51942079964, 0);
	RY(1.57079632679, 1);
	CX(1, 0);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(0, 1);
	U3(1.57079632679, 3.09021712644, 3.14159265359, 0);
	U3(1.57079632679, 4.66101345323, 0, 1);
// Gate: CZ**-0.03270667647415345
	U3(1.57079632679, 0, 0, 2);
	U3(1.57079632679, 3.14159265359, 4.71238898038, 3);
	RX(1.57079632679, 2);
	CX(2, 3);
	RX(1.51942079964, 2);
	RY(1.57079632679, 3);
	CX(3, 2);
	RX(-1.57079632679, 3);
	RZ(1.57079632679, 3);
	CX(2, 3);
	U3(1.57079632679, 3.09021712644, 3.14159265359, 2);
	U3(1.57079632679, 4.66101345323, 0, 3);
	SWAP(0, 1);
	SWAP(2, 3);
// Gate: CZ**-0.03270667647415345
	U3(1.57079632679, 0, 0, 1);
	U3(1.57079632679, 3.14159265359, 4.71238898038, 2);
	RX(1.57079632679, 1);
	CX(1, 2);
	RX(1.51942079964, 1);
	RY(1.57079632679, 2);
	CX(2, 1);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(1, 2);
	U3(1.57079632679, 3.09021712644, 3.14159265359, 1);
	U3(1.57079632679, 4.66101345323, 0, 2);
	RZ(-0.075837404202, 3);
	RZ(-0.0348039972394, 0);
	SWAP(1, 2);
	RZ(-0.075837404202, 2);
	RZ(-0.0348039972394, 1);
	Z(2);
	Z(1);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 1);
	CX(2, 1);
	H(2);
	CX(1, 2);
	RZ(-1.57079632679, 2);
	CX(1, 2);
	RZ(1.57079632679, 2);
	H(2);
	CX(2, 1);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 1);
// Gate: PhasedISWAP**-0.9500630905158097
	RZ(0.785398163397, 3);
	RZ(-0.785398163397, 2);
	CX(3, 2);
	H(3);
	CX(2, 3);
	RZ(-1.49235561294, 3);
	CX(2, 3);
	RZ(1.49235561294, 3);
	H(3);
	CX(3, 2);
	RZ(-0.785398163397, 3);
	RZ(0.785398163397, 2);
// Gate: PhasedISWAP**0.9500630905158097
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 0);
	CX(1, 0);
	H(1);
	CX(0, 1);
	RZ(1.49235561294, 1);
	CX(0, 1);
	RZ(-1.49235561294, 1);
	H(1);
	CX(1, 0);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 0);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 1);
	CX(2, 1);
	H(2);
	CX(1, 2);
	RZ(-1.57079632679, 2);
	CX(1, 2);
	RZ(1.57079632679, 2);
	H(2);
	CX(2, 1);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 1);
// Gate: CZ**-0.013654184706660842
	U3(1.57079632679, 0, 4.71238898038, 3);
	U3(1.57079632679, 3.14159265359, 3.14159265359, 2);
	RX(1.57079632679, 3);
	CX(3, 2);
	RX(1.54934838347, 3);
	RY(1.57079632679, 2);
	CX(2, 3);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(3, 2);
	U3(1.57079632679, 4.69094103706, 3.14159265359, 3);
	U3(1.57079632679, 6.26173736385, 0, 2);
	SWAP(3, 2);
// Gate: CZ**-0.006328040119021747
	U3(1.57079632679, 0, 4.70021651365, 1);
	U3(1.57079632679, 3.14159265359, 6.27101284045, 0);
	RX(1.57079632679, 1);
	CX(1, 0);
	RX(1.56085626449, 1);
	RY(1.57079632679, 0);
	CX(0, 1);
	RX(-1.57079632679, 0);
	RZ(1.57079632679, 0);
	CX(1, 0);
	U3(1.57079632679, 4.71462138481, 3.14159265359, 1);
	U3(1.57079632679, 3.14382505802, 0, 0);
	SWAP(1, 0);
// Gate: CZ**0.009295387491454189
	U3(1.57079632679, 3.14159265359, 3.39936710032, 2);
	U3(1.57079632679, 3.14159265359, 4.97016342712, 1);
	RX(1.57079632679, 2);
	CX(2, 1);
	RX(1.55619516641, 2);
	RY(1.57079632679, 1);
	CX(1, 2);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(2, 1);
	U3(1.57079632679, 6.04001202083, 0, 2);
	U3(1.57079632679, 4.46921569404, 0, 1);
	SWAP(2, 1);
// Gate: CZ**0.009295387491454189
	U3(1.57079632679, 3.14159265359, 3.39936710032, 3);
	U3(1.57079632679, 3.14159265359, 4.97016342712, 2);
	RX(1.57079632679, 3);
	CX(3, 2);
	RX(1.55619516641, 3);
	RY(1.57079632679, 2);
	CX(2, 3);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(3, 2);
	U3(1.57079632679, 6.04001202083, 0, 3);
	U3(1.57079632679, 4.46921569404, 0, 2);
// Gate: CZ**0.009295387491454189
	U3(1.57079632679, 3.14159265359, 3.39936710032, 1);
	U3(1.57079632679, 3.14159265359, 4.97016342712, 0);
	RX(1.57079632679, 1);
	CX(1, 0);
	RX(1.55619516641, 1);
	RY(1.57079632679, 0);
	CX(0, 1);
	RX(-1.57079632679, 0);
	RZ(1.57079632679, 0);
	CX(1, 0);
	U3(1.57079632679, 6.04001202083, 0, 1);
	U3(1.57079632679, 4.46921569404, 0, 0);
	SWAP(3, 2);
	SWAP(1, 0);
// Gate: CZ**0.009295387491454189
	U3(1.57079632679, 3.14159265359, 3.39936710032, 2);
	U3(1.57079632679, 3.14159265359, 4.97016342712, 1);
	RX(1.57079632679, 2);
	CX(2, 1);
	RX(1.55619516641, 2);
	RY(1.57079632679, 1);
	CX(1, 2);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(2, 1);
	U3(1.57079632679, 6.04001202083, 0, 2);
	U3(1.57079632679, 4.46921569404, 0, 1);
	RZ(-0.0214479433292, 0);
	RZ(-0.00994006230197, 3);
	SWAP(2, 1);
	Z(0);
	Z(3);
	RZ(-0.0214479433292, 1);
	RZ(-0.00994006230197, 2);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 2);
	CX(1, 2);
	H(1);
	CX(2, 1);
	RZ(-1.57079632679, 1);
	CX(2, 1);
	RZ(1.57079632679, 1);
	H(1);
	CX(1, 2);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 2);
// Gate: PhasedISWAP**-0.5017530508495694
	RZ(0.785398163397, 0);
	RZ(-0.785398163397, 1);
	CX(0, 1);
	H(0);
	CX(1, 0);
	RZ(-0.788151849155, 0);
	CX(1, 0);
	RZ(0.788151849155, 0);
	H(0);
	CX(0, 1);
	RZ(-0.785398163397, 0);
	RZ(0.785398163397, 1);
// Gate: PhasedISWAP**0.5017530508495694
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 3);
	CX(2, 3);
	H(2);
	CX(3, 2);
	RZ(0.788151849155, 2);
	CX(3, 2);
	RZ(-0.788151849155, 2);
	H(2);
	CX(2, 3);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 3);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 2);
	CX(1, 2);
	H(1);
	CX(2, 1);
	RZ(-1.57079632679, 1);
	CX(2, 1);
	RZ(1.57079632679, 1);
	H(1);
	CX(1, 2);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 2);
// Gate: CZ**-0.00046375097365492423
	U3(1.57079632679, 0, 4.7127893016, 0);
	U3(1.57079632679, 3.14159265359, 3.1419929748, 1);
	RX(1.57079632679, 0);
	CX(0, 1);
	RX(1.57006786843, 0);
	RY(1.57079632679, 1);
	CX(1, 0);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(0, 1);
	U3(1.57079632679, 4.7112602008, 3.14159265359, 0);
	U3(1.57079632679, 6.2820565276, 0, 1);
	SWAP(0, 1);
// Gate: CZ**-0.0004129506013584246
	U3(1.57079632679, 3.14159265359, 4.71187791709, 2);
	U3(1.57079632679, 0, 6.28267424388, 3);
	RX(1.57079632679, 2);
	CX(2, 3);
	RX(1.57014766551, 2);
	RY(1.57079632679, 3);
	CX(3, 2);
	RX(-1.57079632679, 3);
	RZ(1.57079632679, 3);
	CX(2, 3);
	U3(1.57079632679, 4.7122513824, 0, 2);
	U3(1.57079632679, 3.1414550556, 3.14159265359, 3);
	SWAP(2, 3);
// Gate: CZ**0.00043761426330885954
	U3(1.57079632679, 0, 6.28112992364, 1);
	U3(1.57079632679, 0, 4.71033359685, 2);
	RX(1.57079632679, 1);
	CX(1, 2);
	RX(1.57010892402, 1);
	RY(1.57079632679, 2);
	CX(2, 1);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(1, 2);
	U3(1.57079632679, 3.14433544022, 3.14159265359, 1);
	U3(1.57079632679, 4.71513176701, 3.14159265359, 2);
	SWAP(1, 2);
// Gate: CZ**0.00043761426330885954
	U3(1.57079632679, 0, 6.28112992364, 0);
	U3(1.57079632679, 0, 4.71033359685, 1);
	RX(1.57079632679, 0);
	CX(0, 1);
	RX(1.57010892402, 0);
	RY(1.57079632679, 1);
	CX(1, 0);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(0, 1);
	U3(1.57079632679, 3.14433544022, 3.14159265359, 0);
	U3(1.57079632679, 4.71513176701, 3.14159265359, 1);
// Gate: CZ**0.00043761426330885954
	U3(1.57079632679, 0, 6.28112992364, 2);
	U3(1.57079632679, 0, 4.71033359685, 3);
	RX(1.57079632679, 2);
	CX(2, 3);
	RX(1.57010892402, 2);
	RY(1.57079632679, 3);
	CX(3, 2);
	RX(-1.57079632679, 3);
	RZ(1.57079632679, 3);
	CX(2, 3);
	U3(1.57079632679, 3.14433544022, 3.14159265359, 2);
	U3(1.57079632679, 4.71513176701, 3.14159265359, 3);
	SWAP(0, 1);
	SWAP(2, 3);
// Gate: CZ**0.00043761426330885954
	U3(1.57079632679, 0, 6.28112992364, 1);
	U3(1.57079632679, 0, 4.71033359685, 2);
	RX(1.57079632679, 1);
	CX(1, 2);
	RX(1.57010892402, 1);
	RY(1.57079632679, 2);
	CX(2, 1);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(1, 2);
	U3(1.57079632679, 3.14433544022, 3.14159265359, 1);
	U3(1.57079632679, 4.71513176701, 3.14159265359, 2);
	RZ(-0.000728458367347, 3);
	RZ(-0.000648661285628, 0);
	SWAP(1, 2);
	Z(3);
	Z(0);
	RZ(-0.000728458367347, 2);
	RZ(-0.000648661285628, 1);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 1);
	CX(2, 1);
	H(2);
	CX(1, 2);
	RZ(-1.57079632679, 2);
	CX(1, 2);
	RZ(1.57079632679, 2);
	H(2);
	CX(2, 1);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 1);
// Gate: PhasedISWAP**-0.4158482042253096
	RZ(0.785398163397, 3);
	RZ(-0.785398163397, 2);
	CX(3, 2);
	H(3);
	CX(2, 3);
	RZ(-0.653212831662, 3);
	CX(2, 3);
	RZ(0.653212831662, 3);
	H(3);
	CX(3, 2);
	RZ(-0.785398163397, 3);
	RZ(0.785398163397, 2);
// Gate: PhasedISWAP**0.4158482042253096
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 0);
	CX(1, 0);
	H(1);
	CX(0, 1);
	RZ(0.653212831662, 1);
	CX(0, 1);
	RZ(-0.653212831662, 1);
	H(1);
	CX(1, 0);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 0);
	Z(3);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 1);
	CX(2, 1);
	H(2);
	CX(1, 2);
	RZ(-1.57079632679, 2);
	CX(1, 2);
	RZ(1.57079632679, 2);
	H(2);
	CX(2, 1);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 1);
	Z(2);
	Z(0);
	Z(1);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 1);
	CX(2, 1);
	H(2);
	CX(1, 2);
	RZ(-1.57079632679, 2);
	CX(1, 2);
	RZ(1.57079632679, 2);
	H(2);
	CX(2, 1);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 1);
// Gate: PhasedISWAP**0.08130614625631793
	RZ(0.785398163397, 3);
	RZ(-0.785398163397, 2);
	CX(3, 2);
	H(3);
	CX(2, 3);
	RZ(0.127715395797, 3);
	CX(2, 3);
	RZ(-0.127715395797, 3);
	H(3);
	CX(3, 2);
	RZ(-0.785398163397, 3);
	RZ(0.785398163397, 2);
// Gate: PhasedISWAP**-0.08130614625631793
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 0);
	CX(1, 0);
	H(1);
	CX(0, 1);
	RZ(-0.127715395797, 1);
	CX(0, 1);
	RZ(0.127715395797, 1);
	H(1);
	CX(1, 0);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 0);
	RZ(0.352856582139, 3);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 1);
	CX(2, 1);
	H(2);
	CX(1, 2);
	RZ(-1.57079632679, 2);
	CX(1, 2);
	RZ(1.57079632679, 2);
	H(2);
	CX(2, 1);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 1);
	RZ(0.352856582139, 2);
	RZ(0.177471696457, 0);
	RZ(0.177471696457, 1);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 1);
	CX(2, 1);
	H(2);
	CX(1, 2);
	RZ(-1.57079632679, 2);
	CX(1, 2);
	RZ(1.57079632679, 2);
	H(2);
	CX(2, 1);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 1);
// Gate: PhasedISWAP**-0.05102950815299322
	RZ(0.785398163397, 3);
	RZ(-0.785398163397, 2);
	CX(3, 2);
	H(3);
	CX(2, 3);
	RZ(-0.0801569640387, 3);
	CX(2, 3);
	RZ(0.0801569640387, 3);
	H(3);
	CX(3, 2);
	RZ(-0.785398163397, 3);
	RZ(0.785398163397, 2);
// Gate: PhasedISWAP**0.05102950815299322
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 0);
	CX(1, 0);
	H(1);
	CX(0, 1);
	RZ(0.0801569640387, 1);
	CX(0, 1);
	RZ(-0.0801569640387, 1);
	H(1);
	CX(1, 0);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 0);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 1);
	CX(2, 1);
	H(2);
	CX(1, 2);
	RZ(-1.57079632679, 2);
	CX(1, 2);
	RZ(1.57079632679, 2);
	H(2);
	CX(2, 1);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 1);
// Gate: CZ**-0.048279591094340914
	U3(1.57079632679, 0, 1.57079632679, 3);
	U3(1.57079632679, 3.14159265359, 3.14159265359, 2);
	RX(1.57079632679, 3);
	CX(3, 2);
	RX(1.49495892259, 3);
	RY(1.57079632679, 2);
	CX(2, 3);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(3, 2);
	U3(1.57079632679, 1.49495892259, 3.14159265359, 3);
	U3(1.57079632679, 6.20734790298, 0, 2);
	SWAP(3, 2);
// Gate: CZ**-0.022156912718971442
	U3(1.57079632679, 0, 5.49778714378, 1);
	U3(1.57079632679, 3.14159265359, 3.92699081699, 0);
	RX(1.57079632679, 1);
	CX(1, 0);
	RX(1.53599232956, 1);
	RY(1.57079632679, 0);
	CX(0, 1);
	RX(-1.57079632679, 0);
	RZ(1.57079632679, 0);
	CX(1, 0);
	U3(1.57079632679, 3.89218681975, 3.14159265359, 1);
	U3(1.57079632679, 5.46298314654, 0, 0);
	SWAP(1, 0);
// Gate: CZ**-0.03270667647415345
	U3(1.57079632679, 0, 0, 2);
	U3(1.57079632679, 3.14159265359, 4.71238898038, 1);
	RX(1.57079632679, 2);
	CX(2, 1);
	RX(1.51942079964, 2);
	RY(1.57079632679, 1);
	CX(1, 2);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(2, 1);
	U3(1.57079632679, 3.09021712644, 3.14159265359, 2);
	U3(1.57079632679, 4.66101345323, 0, 1);
	SWAP(2, 1);
// Gate: CZ**-0.03270667647415345
	U3(1.57079632679, 0, 0, 3);
	U3(1.57079632679, 3.14159265359, 4.71238898038, 2);
	RX(1.57079632679, 3);
	CX(3, 2);
	RX(1.51942079964, 3);
	RY(1.57079632679, 2);
	CX(2, 3);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(3, 2);
	U3(1.57079632679, 3.09021712644, 3.14159265359, 3);
	U3(1.57079632679, 4.66101345323, 0, 2);
// Gate: CZ**-0.03270667647415345
	U3(1.57079632679, 0, 0, 1);
	U3(1.57079632679, 3.14159265359, 4.71238898038, 0);
	RX(1.57079632679, 1);
	CX(1, 0);
	RX(1.51942079964, 1);
	RY(1.57079632679, 0);
	CX(0, 1);
	RX(-1.57079632679, 0);
	RZ(1.57079632679, 0);
	CX(1, 0);
	U3(1.57079632679, 3.09021712644, 3.14159265359, 1);
	U3(1.57079632679, 4.66101345323, 0, 0);
	SWAP(3, 2);
	SWAP(1, 0);
// Gate: CZ**-0.03270667647415345
	U3(1.57079632679, 0, 0, 2);
	U3(1.57079632679, 3.14159265359, 4.71238898038, 1);
	RX(1.57079632679, 2);
	CX(2, 1);
	RX(1.51942079964, 2);
	RY(1.57079632679, 1);
	CX(1, 2);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(2, 1);
	U3(1.57079632679, 3.09021712644, 3.14159265359, 2);
	U3(1.57079632679, 4.66101345323, 0, 1);
	RZ(-0.075837404202, 0);
	RZ(-0.0348039972394, 3);
	SWAP(2, 1);
	RZ(-0.075837404202, 1);
	RZ(-0.0348039972394, 2);
	Z(1);
	Z(2);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 2);
	CX(1, 2);
	H(1);
	CX(2, 1);
	RZ(-1.57079632679, 1);
	CX(2, 1);
	RZ(1.57079632679, 1);
	H(1);
	CX(1, 2);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 2);
// Gate: PhasedISWAP**-0.9500630905158097
	RZ(0.785398163397, 0);
	RZ(-0.785398163397, 1);
	CX(0, 1);
	H(0);
	CX(1, 0);
	RZ(-1.49235561294, 0);
	CX(1, 0);
	RZ(1.49235561294, 0);
	H(0);
	CX(0, 1);
	RZ(-0.785398163397, 0);
	RZ(0.785398163397, 1);
// Gate: PhasedISWAP**0.9500630905158097
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 3);
	CX(2, 3);
	H(2);
	CX(3, 2);
	RZ(1.49235561294, 2);
	CX(3, 2);
	RZ(-1.49235561294, 2);
	H(2);
	CX(2, 3);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 3);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 2);
	CX(1, 2);
	H(1);
	CX(2, 1);
	RZ(-1.57079632679, 1);
	CX(2, 1);
	RZ(1.57079632679, 1);
	H(1);
	CX(1, 2);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 2);
// Gate: CZ**-0.013654184706660842
	U3(1.57079632679, 0, 4.71238898038, 0);
	U3(1.57079632679, 3.14159265359, 3.14159265359, 1);
	RX(1.57079632679, 0);
	CX(0, 1);
	RX(1.54934838347, 0);
	RY(1.57079632679, 1);
	CX(1, 0);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(0, 1);
	U3(1.57079632679, 4.69094103706, 3.14159265359, 0);
	U3(1.57079632679, 6.26173736385, 0, 1);
	SWAP(0, 1);
// Gate: CZ**-0.006328040119021747
	U3(1.57079632679, 0, 4.70021651365, 2);
	U3(1.57079632679, 3.14159265359, 6.27101284045, 3);
	RX(1.57079632679, 2);
	CX(2, 3);
	RX(1.56085626449, 2);
	RY(1.57079632679, 3);
	CX(3, 2);
	RX(-1.57079632679, 3);
	RZ(1.57079632679, 3);
	CX(2, 3);
	U3(1.57079632679, 4.71462138481, 3.14159265359, 2);
	U3(1.57079632679, 3.14382505802, 0, 3);
	SWAP(2, 3);
// Gate: CZ**0.009295387491454189
	U3(1.57079632679, 3.14159265359, 3.39936710032, 1);
	U3(1.57079632679, 3.14159265359, 4.97016342712, 2);
	RX(1.57079632679, 1);
	CX(1, 2);
	RX(1.55619516641, 1);
	RY(1.57079632679, 2);
	CX(2, 1);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(1, 2);
	U3(1.57079632679, 6.04001202083, 0, 1);
	U3(1.57079632679, 4.46921569404, 0, 2);
	SWAP(1, 2);
// Gate: CZ**0.009295387491454189
	U3(1.57079632679, 3.14159265359, 3.39936710032, 0);
	U3(1.57079632679, 3.14159265359, 4.97016342712, 1);
	RX(1.57079632679, 0);
	CX(0, 1);
	RX(1.55619516641, 0);
	RY(1.57079632679, 1);
	CX(1, 0);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(0, 1);
	U3(1.57079632679, 6.04001202083, 0, 0);
	U3(1.57079632679, 4.46921569404, 0, 1);
// Gate: CZ**0.009295387491454189
	U3(1.57079632679, 3.14159265359, 3.39936710032, 2);
	U3(1.57079632679, 3.14159265359, 4.97016342712, 3);
	RX(1.57079632679, 2);
	CX(2, 3);
	RX(1.55619516641, 2);
	RY(1.57079632679, 3);
	CX(3, 2);
	RX(-1.57079632679, 3);
	RZ(1.57079632679, 3);
	CX(2, 3);
	U3(1.57079632679, 6.04001202083, 0, 2);
	U3(1.57079632679, 4.46921569404, 0, 3);
	SWAP(0, 1);
	SWAP(2, 3);
// Gate: CZ**0.009295387491454189
	U3(1.57079632679, 3.14159265359, 3.39936710032, 1);
	U3(1.57079632679, 3.14159265359, 4.97016342712, 2);
	RX(1.57079632679, 1);
	CX(1, 2);
	RX(1.55619516641, 1);
	RY(1.57079632679, 2);
	CX(2, 1);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(1, 2);
	U3(1.57079632679, 6.04001202083, 0, 1);
	U3(1.57079632679, 4.46921569404, 0, 2);
	RZ(-0.0214479433292, 3);
	RZ(-0.00994006230197, 0);
	SWAP(1, 2);
	Z(3);
	Z(0);
	RZ(-0.0214479433292, 2);
	RZ(-0.00994006230197, 1);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 1);
	CX(2, 1);
	H(2);
	CX(1, 2);
	RZ(-1.57079632679, 2);
	CX(1, 2);
	RZ(1.57079632679, 2);
	H(2);
	CX(2, 1);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 1);
// Gate: PhasedISWAP**-0.5017530508495694
	RZ(0.785398163397, 3);
	RZ(-0.785398163397, 2);
	CX(3, 2);
	H(3);
	CX(2, 3);
	RZ(-0.788151849155, 3);
	CX(2, 3);
	RZ(0.788151849155, 3);
	H(3);
	CX(3, 2);
	RZ(-0.785398163397, 3);
	RZ(0.785398163397, 2);
// Gate: PhasedISWAP**0.5017530508495694
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 0);
	CX(1, 0);
	H(1);
	CX(0, 1);
	RZ(0.788151849155, 1);
	CX(0, 1);
	RZ(-0.788151849155, 1);
	H(1);
	CX(1, 0);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 0);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 1);
	CX(2, 1);
	H(2);
	CX(1, 2);
	RZ(-1.57079632679, 2);
	CX(1, 2);
	RZ(1.57079632679, 2);
	H(2);
	CX(2, 1);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 1);
// Gate: CZ**-0.00046375097365492423
	U3(1.57079632679, 0, 4.7127893016, 3);
	U3(1.57079632679, 3.14159265359, 3.1419929748, 2);
	RX(1.57079632679, 3);
	CX(3, 2);
	RX(1.57006786843, 3);
	RY(1.57079632679, 2);
	CX(2, 3);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(3, 2);
	U3(1.57079632679, 4.7112602008, 3.14159265359, 3);
	U3(1.57079632679, 6.2820565276, 0, 2);
	SWAP(3, 2);
// Gate: CZ**-0.0004129506013584246
	U3(1.57079632679, 3.14159265359, 4.71187791709, 1);
	U3(1.57079632679, 0, 6.28267424388, 0);
	RX(1.57079632679, 1);
	CX(1, 0);
	RX(1.57014766551, 1);
	RY(1.57079632679, 0);
	CX(0, 1);
	RX(-1.57079632679, 0);
	RZ(1.57079632679, 0);
	CX(1, 0);
	U3(1.57079632679, 4.7122513824, 0, 1);
	U3(1.57079632679, 3.1414550556, 3.14159265359, 0);
	SWAP(1, 0);
// Gate: CZ**0.00043761426330885954
	U3(1.57079632679, 0, 6.28112992364, 2);
	U3(1.57079632679, 0, 4.71033359685, 1);
	RX(1.57079632679, 2);
	CX(2, 1);
	RX(1.57010892402, 2);
	RY(1.57079632679, 1);
	CX(1, 2);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(2, 1);
	U3(1.57079632679, 3.14433544022, 3.14159265359, 2);
	U3(1.57079632679, 4.71513176701, 3.14159265359, 1);
	SWAP(2, 1);
// Gate: CZ**0.00043761426330885954
	U3(1.57079632679, 0, 6.28112992364, 3);
	U3(1.57079632679, 0, 4.71033359685, 2);
	RX(1.57079632679, 3);
	CX(3, 2);
	RX(1.57010892402, 3);
	RY(1.57079632679, 2);
	CX(2, 3);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(3, 2);
	U3(1.57079632679, 3.14433544022, 3.14159265359, 3);
	U3(1.57079632679, 4.71513176701, 3.14159265359, 2);
// Gate: CZ**0.00043761426330885954
	U3(1.57079632679, 0, 6.28112992364, 1);
	U3(1.57079632679, 0, 4.71033359685, 0);
	RX(1.57079632679, 1);
	CX(1, 0);
	RX(1.57010892402, 1);
	RY(1.57079632679, 0);
	CX(0, 1);
	RX(-1.57079632679, 0);
	RZ(1.57079632679, 0);
	CX(1, 0);
	U3(1.57079632679, 3.14433544022, 3.14159265359, 1);
	U3(1.57079632679, 4.71513176701, 3.14159265359, 0);
	SWAP(3, 2);
	SWAP(1, 0);
// Gate: CZ**0.00043761426330885954
	U3(1.57079632679, 0, 6.28112992364, 2);
	U3(1.57079632679, 0, 4.71033359685, 1);
	RX(1.57079632679, 2);
	CX(2, 1);
	RX(1.57010892402, 2);
	RY(1.57079632679, 1);
	CX(1, 2);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(2, 1);
	U3(1.57079632679, 3.14433544022, 3.14159265359, 2);
	U3(1.57079632679, 4.71513176701, 3.14159265359, 1);
	RZ(-0.000728458367347, 0);
	RZ(-0.000648661285628, 3);
	SWAP(2, 1);
	Z(0);
	Z(3);
	RZ(-0.000728458367347, 1);
	RZ(-0.000648661285628, 2);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 2);
	CX(1, 2);
	H(1);
	CX(2, 1);
	RZ(-1.57079632679, 1);
	CX(2, 1);
	RZ(1.57079632679, 1);
	H(1);
	CX(1, 2);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 2);
// Gate: PhasedISWAP**-0.4158482042253096
	RZ(0.785398163397, 0);
	RZ(-0.785398163397, 1);
	CX(0, 1);
	H(0);
	CX(1, 0);
	RZ(-0.653212831662, 0);
	CX(1, 0);
	RZ(0.653212831662, 0);
	H(0);
	CX(0, 1);
	RZ(-0.785398163397, 0);
	RZ(0.785398163397, 1);
// Gate: PhasedISWAP**0.4158482042253096
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 3);
	CX(2, 3);
	H(2);
	CX(3, 2);
	RZ(0.653212831662, 2);
	CX(3, 2);
	RZ(-0.653212831662, 2);
	H(2);
	CX(2, 3);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 3);
	Z(0);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 2);
	CX(1, 2);
	H(1);
	CX(2, 1);
	RZ(-1.57079632679, 1);
	CX(2, 1);
	RZ(1.57079632679, 1);
	H(1);
	CX(1, 2);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 2);
	Z(1);
	Z(3);
	Z(2);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 2);
	CX(1, 2);
	H(1);
	CX(2, 1);
	RZ(-1.57079632679, 1);
	CX(2, 1);
	RZ(1.57079632679, 1);
	H(1);
	CX(1, 2);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 2);
// Gate: PhasedISWAP**0.08130614625631793
	RZ(0.785398163397, 0);
	RZ(-0.785398163397, 1);
	CX(0, 1);
	H(0);
	CX(1, 0);
	RZ(0.127715395797, 0);
	CX(1, 0);
	RZ(-0.127715395797, 0);
	H(0);
	CX(0, 1);
	RZ(-0.785398163397, 0);
	RZ(0.785398163397, 1);
// Gate: PhasedISWAP**-0.08130614625631793
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 3);
	CX(2, 3);
	H(2);
	CX(3, 2);
	RZ(-0.127715395797, 2);
	CX(3, 2);
	RZ(0.127715395797, 2);
	H(2);
	CX(2, 3);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 3);
	RZ(0.352856582139, 0);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 2);
	CX(1, 2);
	H(1);
	CX(2, 1);
	RZ(-1.57079632679, 1);
	CX(2, 1);
	RZ(1.57079632679, 1);
	H(1);
	CX(1, 2);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 2);
	RZ(0.352856582139, 1);
	RZ(0.177471696457, 3);
	RZ(0.177471696457, 2);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 2);
	CX(1, 2);
	H(1);
	CX(2, 1);
	RZ(-1.57079632679, 1);
	CX(2, 1);
	RZ(1.57079632679, 1);
	H(1);
	CX(1, 2);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 2);
// Gate: PhasedISWAP**-0.05102950815299322
	RZ(0.785398163397, 0);
	RZ(-0.785398163397, 1);
	CX(0, 1);
	H(0);
	CX(1, 0);
	RZ(-0.0801569640387, 0);
	CX(1, 0);
	RZ(0.0801569640387, 0);
	H(0);
	CX(0, 1);
	RZ(-0.785398163397, 0);
	RZ(0.785398163397, 1);
// Gate: PhasedISWAP**0.05102950815299322
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 3);
	CX(2, 3);
	H(2);
	CX(3, 2);
	RZ(0.0801569640387, 2);
	CX(3, 2);
	RZ(-0.0801569640387, 2);
	H(2);
	CX(2, 3);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 3);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 2);
	CX(1, 2);
	H(1);
	CX(2, 1);
	RZ(-1.57079632679, 1);
	CX(2, 1);
	RZ(1.57079632679, 1);
	H(1);
	CX(1, 2);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 2);
// Gate: CZ**-0.048279591094340914
	U3(1.57079632679, 0, 1.57079632679, 0);
	U3(1.57079632679, 3.14159265359, 3.14159265359, 1);
	RX(1.57079632679, 0);
	CX(0, 1);
	RX(1.49495892259, 0);
	RY(1.57079632679, 1);
	CX(1, 0);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(0, 1);
	U3(1.57079632679, 1.49495892259, 3.14159265359, 0);
	U3(1.57079632679, 6.20734790298, 0, 1);
	SWAP(0, 1);
// Gate: CZ**-0.022156912718971442
	U3(1.57079632679, 0, 5.49778714378, 2);
	U3(1.57079632679, 3.14159265359, 3.92699081699, 3);
	RX(1.57079632679, 2);
	CX(2, 3);
	RX(1.53599232956, 2);
	RY(1.57079632679, 3);
	CX(3, 2);
	RX(-1.57079632679, 3);
	RZ(1.57079632679, 3);
	CX(2, 3);
	U3(1.57079632679, 3.89218681975, 3.14159265359, 2);
	U3(1.57079632679, 5.46298314654, 0, 3);
	SWAP(2, 3);
// Gate: CZ**-0.03270667647415345
	U3(1.57079632679, 0, 0, 1);
	U3(1.57079632679, 3.14159265359, 4.71238898038, 2);
	RX(1.57079632679, 1);
	CX(1, 2);
	RX(1.51942079964, 1);
	RY(1.57079632679, 2);
	CX(2, 1);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(1, 2);
	U3(1.57079632679, 3.09021712644, 3.14159265359, 1);
	U3(1.57079632679, 4.66101345323, 0, 2);
	SWAP(1, 2);
// Gate: CZ**-0.03270667647415345
	U3(1.57079632679, 0, 0, 0);
	U3(1.57079632679, 3.14159265359, 4.71238898038, 1);
	RX(1.57079632679, 0);
	CX(0, 1);
	RX(1.51942079964, 0);
	RY(1.57079632679, 1);
	CX(1, 0);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(0, 1);
	U3(1.57079632679, 3.09021712644, 3.14159265359, 0);
	U3(1.57079632679, 4.66101345323, 0, 1);
// Gate: CZ**-0.03270667647415345
	U3(1.57079632679, 0, 0, 2);
	U3(1.57079632679, 3.14159265359, 4.71238898038, 3);
	RX(1.57079632679, 2);
	CX(2, 3);
	RX(1.51942079964, 2);
	RY(1.57079632679, 3);
	CX(3, 2);
	RX(-1.57079632679, 3);
	RZ(1.57079632679, 3);
	CX(2, 3);
	U3(1.57079632679, 3.09021712644, 3.14159265359, 2);
	U3(1.57079632679, 4.66101345323, 0, 3);
	SWAP(0, 1);
	SWAP(2, 3);
// Gate: CZ**-0.03270667647415345
	U3(1.57079632679, 0, 0, 1);
	U3(1.57079632679, 3.14159265359, 4.71238898038, 2);
	RX(1.57079632679, 1);
	CX(1, 2);
	RX(1.51942079964, 1);
	RY(1.57079632679, 2);
	CX(2, 1);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(1, 2);
	U3(1.57079632679, 3.09021712644, 3.14159265359, 1);
	U3(1.57079632679, 4.66101345323, 0, 2);
	RZ(-0.075837404202, 3);
	RZ(-0.0348039972394, 0);
	SWAP(1, 2);
	RZ(-0.075837404202, 2);
	RZ(-0.0348039972394, 1);
	Z(2);
	Z(1);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 1);
	CX(2, 1);
	H(2);
	CX(1, 2);
	RZ(-1.57079632679, 2);
	CX(1, 2);
	RZ(1.57079632679, 2);
	H(2);
	CX(2, 1);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 1);
// Gate: PhasedISWAP**-0.9500630905158097
	RZ(0.785398163397, 3);
	RZ(-0.785398163397, 2);
	CX(3, 2);
	H(3);
	CX(2, 3);
	RZ(-1.49235561294, 3);
	CX(2, 3);
	RZ(1.49235561294, 3);
	H(3);
	CX(3, 2);
	RZ(-0.785398163397, 3);
	RZ(0.785398163397, 2);
// Gate: PhasedISWAP**0.9500630905158097
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 0);
	CX(1, 0);
	H(1);
	CX(0, 1);
	RZ(1.49235561294, 1);
	CX(0, 1);
	RZ(-1.49235561294, 1);
	H(1);
	CX(1, 0);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 0);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 1);
	CX(2, 1);
	H(2);
	CX(1, 2);
	RZ(-1.57079632679, 2);
	CX(1, 2);
	RZ(1.57079632679, 2);
	H(2);
	CX(2, 1);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 1);
// Gate: CZ**-0.013654184706660842
	U3(1.57079632679, 0, 4.71238898038, 3);
	U3(1.57079632679, 3.14159265359, 3.14159265359, 2);
	RX(1.57079632679, 3);
	CX(3, 2);
	RX(1.54934838347, 3);
	RY(1.57079632679, 2);
	CX(2, 3);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(3, 2);
	U3(1.57079632679, 4.69094103706, 3.14159265359, 3);
	U3(1.57079632679, 6.26173736385, 0, 2);
	SWAP(3, 2);
// Gate: CZ**-0.006328040119021747
	U3(1.57079632679, 0, 4.70021651365, 1);
	U3(1.57079632679, 3.14159265359, 6.27101284045, 0);
	RX(1.57079632679, 1);
	CX(1, 0);
	RX(1.56085626449, 1);
	RY(1.57079632679, 0);
	CX(0, 1);
	RX(-1.57079632679, 0);
	RZ(1.57079632679, 0);
	CX(1, 0);
	U3(1.57079632679, 4.71462138481, 3.14159265359, 1);
	U3(1.57079632679, 3.14382505802, 0, 0);
	SWAP(1, 0);
// Gate: CZ**0.009295387491454189
	U3(1.57079632679, 3.14159265359, 3.39936710032, 2);
	U3(1.57079632679, 3.14159265359, 4.97016342712, 1);
	RX(1.57079632679, 2);
	CX(2, 1);
	RX(1.55619516641, 2);
	RY(1.57079632679, 1);
	CX(1, 2);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(2, 1);
	U3(1.57079632679, 6.04001202083, 0, 2);
	U3(1.57079632679, 4.46921569404, 0, 1);
	SWAP(2, 1);
// Gate: CZ**0.009295387491454189
	U3(1.57079632679, 3.14159265359, 3.39936710032, 3);
	U3(1.57079632679, 3.14159265359, 4.97016342712, 2);
	RX(1.57079632679, 3);
	CX(3, 2);
	RX(1.55619516641, 3);
	RY(1.57079632679, 2);
	CX(2, 3);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(3, 2);
	U3(1.57079632679, 6.04001202083, 0, 3);
	U3(1.57079632679, 4.46921569404, 0, 2);
// Gate: CZ**0.009295387491454189
	U3(1.57079632679, 3.14159265359, 3.39936710032, 1);
	U3(1.57079632679, 3.14159265359, 4.97016342712, 0);
	RX(1.57079632679, 1);
	CX(1, 0);
	RX(1.55619516641, 1);
	RY(1.57079632679, 0);
	CX(0, 1);
	RX(-1.57079632679, 0);
	RZ(1.57079632679, 0);
	CX(1, 0);
	U3(1.57079632679, 6.04001202083, 0, 1);
	U3(1.57079632679, 4.46921569404, 0, 0);
	SWAP(3, 2);
	SWAP(1, 0);
// Gate: CZ**0.009295387491454189
	U3(1.57079632679, 3.14159265359, 3.39936710032, 2);
	U3(1.57079632679, 3.14159265359, 4.97016342712, 1);
	RX(1.57079632679, 2);
	CX(2, 1);
	RX(1.55619516641, 2);
	RY(1.57079632679, 1);
	CX(1, 2);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(2, 1);
	U3(1.57079632679, 6.04001202083, 0, 2);
	U3(1.57079632679, 4.46921569404, 0, 1);
	RZ(-0.0214479433292, 0);
	RZ(-0.00994006230197, 3);
	SWAP(2, 1);
	Z(0);
	Z(3);
	RZ(-0.0214479433292, 1);
	RZ(-0.00994006230197, 2);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 2);
	CX(1, 2);
	H(1);
	CX(2, 1);
	RZ(-1.57079632679, 1);
	CX(2, 1);
	RZ(1.57079632679, 1);
	H(1);
	CX(1, 2);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 2);
// Gate: PhasedISWAP**-0.5017530508495694
	RZ(0.785398163397, 0);
	RZ(-0.785398163397, 1);
	CX(0, 1);
	H(0);
	CX(1, 0);
	RZ(-0.788151849155, 0);
	CX(1, 0);
	RZ(0.788151849155, 0);
	H(0);
	CX(0, 1);
	RZ(-0.785398163397, 0);
	RZ(0.785398163397, 1);
// Gate: PhasedISWAP**0.5017530508495694
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 3);
	CX(2, 3);
	H(2);
	CX(3, 2);
	RZ(0.788151849155, 2);
	CX(3, 2);
	RZ(-0.788151849155, 2);
	H(2);
	CX(2, 3);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 3);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 2);
	CX(1, 2);
	H(1);
	CX(2, 1);
	RZ(-1.57079632679, 1);
	CX(2, 1);
	RZ(1.57079632679, 1);
	H(1);
	CX(1, 2);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 2);
// Gate: CZ**-0.00046375097365492423
	U3(1.57079632679, 0, 4.7127893016, 0);
	U3(1.57079632679, 3.14159265359, 3.1419929748, 1);
	RX(1.57079632679, 0);
	CX(0, 1);
	RX(1.57006786843, 0);
	RY(1.57079632679, 1);
	CX(1, 0);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(0, 1);
	U3(1.57079632679, 4.7112602008, 3.14159265359, 0);
	U3(1.57079632679, 6.2820565276, 0, 1);
	SWAP(0, 1);
// Gate: CZ**-0.0004129506013584246
	U3(1.57079632679, 3.14159265359, 4.71187791709, 2);
	U3(1.57079632679, 0, 6.28267424388, 3);
	RX(1.57079632679, 2);
	CX(2, 3);
	RX(1.57014766551, 2);
	RY(1.57079632679, 3);
	CX(3, 2);
	RX(-1.57079632679, 3);
	RZ(1.57079632679, 3);
	CX(2, 3);
	U3(1.57079632679, 4.7122513824, 0, 2);
	U3(1.57079632679, 3.1414550556, 3.14159265359, 3);
	SWAP(2, 3);
// Gate: CZ**0.00043761426330885954
	U3(1.57079632679, 0, 6.28112992364, 1);
	U3(1.57079632679, 0, 4.71033359685, 2);
	RX(1.57079632679, 1);
	CX(1, 2);
	RX(1.57010892402, 1);
	RY(1.57079632679, 2);
	CX(2, 1);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(1, 2);
	U3(1.57079632679, 3.14433544022, 3.14159265359, 1);
	U3(1.57079632679, 4.71513176701, 3.14159265359, 2);
	SWAP(1, 2);
// Gate: CZ**0.00043761426330885954
	U3(1.57079632679, 0, 6.28112992364, 0);
	U3(1.57079632679, 0, 4.71033359685, 1);
	RX(1.57079632679, 0);
	CX(0, 1);
	RX(1.57010892402, 0);
	RY(1.57079632679, 1);
	CX(1, 0);
	RX(-1.57079632679, 1);
	RZ(1.57079632679, 1);
	CX(0, 1);
	U3(1.57079632679, 3.14433544022, 3.14159265359, 0);
	U3(1.57079632679, 4.71513176701, 3.14159265359, 1);
// Gate: CZ**0.00043761426330885954
	U3(1.57079632679, 0, 6.28112992364, 2);
	U3(1.57079632679, 0, 4.71033359685, 3);
	RX(1.57079632679, 2);
	CX(2, 3);
	RX(1.57010892402, 2);
	RY(1.57079632679, 3);
	CX(3, 2);
	RX(-1.57079632679, 3);
	RZ(1.57079632679, 3);
	CX(2, 3);
	U3(1.57079632679, 3.14433544022, 3.14159265359, 2);
	U3(1.57079632679, 4.71513176701, 3.14159265359, 3);
	SWAP(0, 1);
	SWAP(2, 3);
// Gate: CZ**0.00043761426330885954
	U3(1.57079632679, 0, 6.28112992364, 1);
	U3(1.57079632679, 0, 4.71033359685, 2);
	RX(1.57079632679, 1);
	CX(1, 2);
	RX(1.57010892402, 1);
	RY(1.57079632679, 2);
	CX(2, 1);
	RX(-1.57079632679, 2);
	RZ(1.57079632679, 2);
	CX(1, 2);
	U3(1.57079632679, 3.14433544022, 3.14159265359, 1);
	U3(1.57079632679, 4.71513176701, 3.14159265359, 2);
	RZ(-0.000728458367347, 3);
	RZ(-0.000648661285628, 0);
	SWAP(1, 2);
	Z(3);
	Z(0);
	RZ(-0.000728458367347, 2);
	RZ(-0.000648661285628, 1);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 1);
	CX(2, 1);
	H(2);
	CX(1, 2);
	RZ(-1.57079632679, 2);
	CX(1, 2);
	RZ(1.57079632679, 2);
	H(2);
	CX(2, 1);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 1);
// Gate: PhasedISWAP**-0.4158482042253096
	RZ(0.785398163397, 3);
	RZ(-0.785398163397, 2);
	CX(3, 2);
	H(3);
	CX(2, 3);
	RZ(-0.653212831662, 3);
	CX(2, 3);
	RZ(0.653212831662, 3);
	H(3);
	CX(3, 2);
	RZ(-0.785398163397, 3);
	RZ(0.785398163397, 2);
// Gate: PhasedISWAP**0.4158482042253096
	RZ(0.785398163397, 1);
	RZ(-0.785398163397, 0);
	CX(1, 0);
	H(1);
	CX(0, 1);
	RZ(0.653212831662, 1);
	CX(0, 1);
	RZ(-0.653212831662, 1);
	H(1);
	CX(1, 0);
	RZ(-0.785398163397, 1);
	RZ(0.785398163397, 0);
// Gate: PhasedISWAP**-1.0
	RZ(0.785398163397, 2);
	RZ(-0.785398163397, 1);
	CX(2, 1);
	H(2);
	CX(1, 2);
	RZ(-1.57079632679, 2);
	CX(1, 2);
	RZ(1.57079632679, 2);
	H(2);
	CX(2, 1);
	RZ(-0.785398163397, 2);
	RZ(0.785398163397, 1);
	SWAP(3, 2);
	SWAP(1, 0);
	SWAP(2, 1);
	SWAP(3, 2);
	SWAP(1, 0);
	SWAP(2, 1);
}
#endif
